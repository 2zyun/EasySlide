{"name":"Easyslide","tagline":"easy to build a mobile page slide","body":"# EasySlide\r\n\r\nEasy to build a mobile page slide.\r\n\r\n----\r\n\r\n### 介绍\r\n\r\nEasySlide 不基于任何框架。它是一个可以快速、独立的制作H5 Mobile页面的微框架。\r\n\r\n它包含`加载资源loader`，`页面切换`，`子类PPT`，`内部页面跳转`，`page layer`，`自定义动画效果`和`扩展动画效果`等功能。\r\n\r\n使用EasySlide，可以不再使用javascript来设置动画顺序与效果，而只需要编写对应的动画类和设置HTML节点信息即可，它还内置一些utils和动画效果，你也可以使用监听器和自己编写CSS类来扩展EasySlide.\r\n\r\n### Demo\r\n\r\n![EasySlide](demo/images/demo.gif)\r\n\r\n![EasySlide](demo/images/yoga.gif)\r\n\r\n```\r\ngif图片较大，耐心等待刷出~，gif有丢帧，详细请clone本项目，打开demo文件夹查看，本地可运行。\r\n```\r\n\r\n### 快速上手\r\n\r\n首先需要引用对应的css和javascript，和要求的HTML结构，本框架只支持移动端，更多API见参考文档。\r\n\r\n```html\r\n<html>\r\n   <head>\r\n       <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no\" />\r\n       <link href=\"reset.css\" rel=\"stylesheet\"> <!-- 或者你自己的reste css -->\r\n       <link href=\"../EasySlide.css\" rel=\"stylesheet\"> <!-- EasySlide所依赖的css -->\r\n       <script src=\"../EasySlide.js\"></script> <!-- EasySlide所依赖的js -->\r\n   </head>\r\n   <body>\r\n       <div class=\"EasySlide-warp\" id=\"j_wrap\">\r\n           <div index=\"0\" class=\"EasySlide-slides\"> <!-- 一个page的容器 -->\r\n               <div gindex=\"0\" class=\"EasySlide-groups\"> <!-- 一个page可以分成多个group来展示 -->\r\n                  <div id=\"j_ppt\"></div> <!-- ppt幻灯钩子 -->\r\n               </div>\r\n           </div>\r\n           <div index=\"1\" class=\"Easyslide-slides\">\r\n               <div gindex=\"0\" class=\"EasySlide-groups\">\r\n                  <h1 class=\"EasySlide-animate\" in=\"zoomIn\" duration=\"1s\" delay=\".5s\">Title</h1> <!-- 每个groups里的元素都可以通过EasySlide-animte来标记，在dom节点上直接做动画操作 -->\r\n               </div>\r\n           </div>\r\n       </div>\r\n       <script>\r\n          var Slide = new EasySlide({\r\n             replay:true, //每页动画都重新播放\r\n             subpptObjects:[{\r\n                wrapDiv:\"j_ppt\", //ppt类容器钩子\r\n                img:[\"images/1.jpg\",\"images/2.jpg\",\"images/3.jpg\",\"images/4.jpg\"], //ppt展示的图片，最少4张\r\n                parentNum:0 //所属slides的index\r\n             }],\r\n             wrapAll:\"j_wrap\" //整个slides的父容器\r\n          });\r\n          \r\n          Slide.on(\"progress\",function(percent){\r\n             console.log(percent); //loading的百分比，可以自己定义loading层和动画\r\n          });\r\n          \r\n          Slide.on(\"loaded\",function(){\r\n             //load资源结束，隐藏loading层，展示slide\r\n          });\r\n          \r\n          //load对应图片资源\r\n          Slide.load([\"images/1.jpg\",\"images/2.jpg\",\"...\"]);\r\n       </script>\r\n   </body>\r\n</html>\r\n```\r\n\r\n### API\r\n\r\n-----\r\n\r\n##### EasySlide\r\n\r\n-----\r\n\r\n#### 方法\r\n\r\n-----\r\n\r\n##### loader\r\n```js\r\nnew EasySlide({\r\n  \r\n}).loader([\"img1.jpg\",\"img2.jpg\"]);\r\n\r\n//调用loader方法可以实现预加载图片资源，并可以监听到loaded和progress两个事件\r\n```\r\n#####goto\r\n```js\r\nvar Slide = new EasySlide({});\r\nSlide.goto(3);\r\n//页面跳转到对应的slide index\r\n```\r\n##### move\r\n```js\r\nvar Slide = new EasySlide({});\r\nSlide.move(1) //-1 参数为1或者-1\r\n//移动当前页面至前后一页\r\n```\r\n\r\n-----\r\n\r\n#### 事件\r\n\r\n-----\r\n\r\n##### progress\r\n##### loaded\r\n```js\r\n//loader只后，使用on方法可以监听到progress事件，回调第一个参数为百分比\r\nvar Slide = new EasySlide({});\r\nSlide.on(\"progress\",function(pre){\r\n//xx.xx %\r\n});\r\nSlide.on(\"loaded\",function(){\r\n//load资源结束\r\n});\r\nSlide.loader([\"1.jpg\",\"2.jpg\"]);\r\n```\r\n##### swipeY\r\n##### swipeX\r\n```js\r\nvar Slide = new EasySlide({});\r\nSlide.on(\"swipeX\",function(direction){\r\n//direction为 1或者-1 代表方向\r\n});\r\nSlide.on(\"swipeY\",function(direction){\r\n//direction为 1或者-1 代表方向\r\n});\r\n```\r\n##### slide-switchEnd\r\n##### ppt-switchEnd\r\n```js\r\nvar Slide = new EasySlide({});\r\nSlide.on(\"slide-switchEnd\",function(allowSwipe){\r\n//slide翻页结束后触发，回调返回该页是否可被继续swipe，allowSwipe可能为next或者prev\r\n});\r\nSlide.on(\"ppt-switchEnd\",function(direction){\r\n//幻灯翻页结束后触发\r\n});\r\n```\r\n\r\n-----\r\n\r\n#### 初始化参数配置\r\n\r\n-----\r\n\r\n##### wrapAll\r\n```js\r\n//必填，所有slides的父节点id\r\n```\r\n##### SubpptObjects\r\n```js\r\nSubpptObjects:[{\r\n   wrapDiv:\"\", //ppt节点id\r\n   imgs:[\"1.jpg\",\"2.jpg\"], //ppt幻灯图片\r\n   parentNum:0 //所在父节点的index值\r\n}]\r\n```\r\n##### replay\r\n```js\r\n//布尔值，默认为false，表示动画结束后，再次翻到此页，是否重播动画，对所有slide生效。\r\n```\r\n##### firstTime\r\n```js\r\n第一屏第一轮是否可以回滚设置，默认为true，不可以\r\n```\r\n##### animateEffect\r\n```\r\nslide切换所使用的特效名称 默认 default, 可选:(card,rotate,flip,scale)\r\n```\r\n##### swipeDirection\r\n```js\r\nslide滑动方向，默认为 \"y\"\r\n```\r\n\r\n-----\r\n\r\n#### animate参数配置\r\n```\r\n设置为class=\"EasySlide-animate\"的节点，都可以配置如下参数\r\n```\r\n-----\r\n\r\n##### in\r\n```\r\n默认自带得animate效果有zoomIn,fadeIn,fadeInDown,fadeInUp,pulse\r\n可在EasySlide.css中找到，也可以自己增加。\r\n```\r\n##### delay\r\n```\r\n设置动画开始延迟时间 delay=\".5s\"\r\n```\r\n##### duration\r\n```\r\n设置动画总时间 duration=\"1s\"\r\n```\r\n##### tfunction\r\n```\r\n设置动画的timing-function，默认ease\r\n```\r\n##### iteration\r\n```\r\n设置动画的iteration,默认是 1\r\n```\r\n-----\r\n\r\n#### slide参数配置\r\n```\r\n设置为class=\"EasySlide-slides\"下的子节点都可以配置如下参数\r\n```\r\n##### index\r\n```\r\nslide所属顺序\r\n```\r\n##### gindex\r\n```\r\ngroup所属顺序\r\n```\r\n##### layerid\r\n```\r\n点击某节点后弹出浮层的浮层id,对应用法需要在点击节点上设置flayerTriggerCls\r\n```\r\n##### scroll\r\n```\r\n当前层是否为带scroll y的节点，设置后，滚动条可用，如demo。\r\n```\r\n##### goto\r\n```\r\n点击节点后跳转至对应slide goto=\"3\"\r\n```\r\n##### allowswipe\r\n```\r\n当前slide是否允许被滑动，可设置next和prev，不设置为上下均可滑动。\r\n```\r\n-----\r\n\r\n##### EasySlide.STATIC\r\n```\r\n默认的EasySlide className储存位置，如果想自定义可以修改。\r\n```\r\n##### EasySlide.STATIC.flayerCls\r\n##### EasySlide.STATIC.flayerTriggerCls\r\n##### EasySlide.STATIC.animateCls\r\n##### EasySlide.STATIC.groupCls\r\n##### EasySlide.STATIC.slideCls\r\n\r\n-----\r\n\r\n##### EasySlide.Subppt.STATIC\r\n```\r\n默认的EasySlide subppt className储存位置，如果想自定义可以修改。\r\n```\r\n-----\r\n\r\n##### EasySlide.Subppt.STATIC.slideCls\r\n##### EasySlide.Subppt.STATIC.imgWrapCls\r\n\r\n-----\r\n\r\n##### EasySlide.utils \r\n```\r\n一些常见的工具方法\r\n```\r\n-----\r\n\r\n##### EasySlide.utils.$\r\n```\r\nid选择器\r\n```\r\n##### EasySlide.utils.getByTagName\r\n```\r\nTag选择器\r\n```\r\n##### EasySlide.utils.getByClsName\r\n```\r\nClassName选择器\r\n```\r\n##### EasySlide.utils.makeElesArray\r\n```\r\n把类数组元素转换成数组元素\r\n```\r\n##### EasySlide.utils.attr\r\n```\r\n或者和设置属性方法\r\n```\r\n##### EasySlide.utils.bind\r\n```\r\n绑定DOM事件\r\n```\r\n##### EasySlide.utils.unbind\r\n```\r\n解绑DOM事件\r\n```\r\n##### EasySlide.utils.viewDate\r\n```\r\n获取窗口视图信息\r\n```\r\n##### EasySlide.utils.remove\r\n```\r\n删除DOM元素\r\n```\r\n##### EasySlide.utils.hide\r\n```\r\n隐藏DOM元素\r\n```\r\n##### EasySlide.utils.show\r\n```\r\n显示DOM元素\r\n```\r\n##### EasySlide.utils.hasAttr\r\n```\r\n查看DOM元素是否有自定义属性\r\n```\r\n##### EasySlide.utils.contain\r\n```\r\n查看是否包含对应className的元素\r\n```\r\n##### EasySlide.utils.isWeixin\r\n```\r\n检查是否是微信浏览器\r\n```\r\n##### EasySlide.utils.hasClass\r\n```\r\n检查是否包含对应cls\r\n```\r\n##### EasySlide.utils.shareWeibo\r\n```\r\n分享到微博\r\n```\r\n##### EasySlide.utils.mixin\r\n```\r\n属性拷贝方法\r\n```\r\n-----\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}